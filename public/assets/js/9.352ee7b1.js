(window.webpackJsonp=window.webpackJsonp||[]).push([[9],{191:function(e,t,r){e.exports=r.p+"assets/img/BFFCC86E3251E26F99E4FA7488AC7058.bffcc86e.png"},203:function(e,t,r){"use strict";r.r(t);var a=r(6),s=Object(a.a)({},(function(){var e=this,t=e.$createElement,a=e._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":e.$parent.slotKey}},[a("h1",{attrs:{id:"vim-tip-for-quiver"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#vim-tip-for-quiver"}},[e._v("#")]),e._v(" Vim tip for Quiver")]),e._v(" "),a("h3",{attrs:{id:"navigating-wrapped-lines-using-vim"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#navigating-wrapped-lines-using-vim"}},[e._v("#")]),e._v(" Navigating wrapped lines using Vim")]),e._v(" "),a("p",[e._v("I was finding myself struggling to navigate between long wrapped lines in Quiver using Vim's "),a("code",[e._v("j")]),e._v(" and "),a("code",[e._v("k")]),e._v(" commands. Text, as opposed to code, can have long physical lines. I could break them up by add a line break after every period but that feels strange. While perusing the Quiver wiki I landed on the "),a("a",{attrs:{href:"https://github.com/HappenApps/Quiver/wiki/Vim",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vim section"),a("OutboundLink")],1),e._v(". There was my answer:")]),e._v(" "),a("blockquote",[a("p",[e._v("Quiver has line wrapping turned on by default (src). To get j and k working normally, either use "),a("code",[e._v(":set nowrap")]),e._v(" or "),a("code",[e._v(":map j gj")]),e._v(" and "),a("code",[e._v(":map k gk")]),e._v(".")])]),e._v(" "),a("p",[e._v("I applied the keymap and it worked beautifully. I also learned about Vim's "),a("code",[e._v("gj")]),e._v(" option for the first time. Here is the "),a("a",{attrs:{href:"https://vim.fandom.com/wiki/Move_cursor_by_display_lines_when_wrapping",target:"_blank",rel:"noopener noreferrer"}},[e._v("documenation"),a("OutboundLink")],1),e._v(" if you are interested.")]),e._v(" "),a("h3",{attrs:{id:"applescript"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#applescript"}},[e._v("#")]),e._v(" AppleScript")]),e._v(" "),a("p",[e._v("The next problem was that the map commands were not being persisted. At every restart, I would have to retype "),a("code",[e._v(":map j gj")]),e._v(" and "),a("code",[e._v(":map k gk")]),e._v(". The docs came in handy again and pointed me to this "),a("a",{attrs:{href:"https://github.com/YangVincent/dotfiles/blob/master/quiver/Quiver.scpt",target:"_blank",rel:"noopener noreferrer"}},[e._v("applescript"),a("OutboundLink")],1),e._v(". The script would programmatically open Quiver and type in those commands. I modified the script to "),a("a",{attrs:{href:"https://github.com/JibranKalia/dotfiles/blob/9782384c4166a03e6ec0b44690970b92911b3b31/quiver/Quiver.scpt",target:"_blank",rel:"noopener noreferrer"}},[e._v("my preferences"),a("OutboundLink")],1),e._v(". Gave it the correct access permissions for an executable via "),a("code",[e._v("chmod 755 Quiver.sh")]),e._v(" and ran it.")]),e._v(" "),a("h3",{attrs:{id:"accessability-permissions"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#accessability-permissions"}},[e._v("#")]),e._v(" Accessability Permissions")]),e._v(" "),a("p",[e._v("I got the following error:\n"),a("code",[e._v("execution error: System Events got an error: osascript is not allowed to send keystrokes. (1002)")]),e._v(".")]),e._v(" "),a("p",[e._v("Turns out my Script Editor didn't have enough permissions. So I went under System Preferences > Security & Privacy > Privacy > Accessibility and checked the box.")]),e._v(" "),a("p",[a("img",{attrs:{src:r(191),alt:"Accessibility Screen"}})]),e._v(" "),a("p",[e._v("However, I wasn't done yet. I ran "),a("code",[e._v("./Quiver.sh")]),e._v(" again and got the same permission error. After some research, I realized I needed to give "),a("a",{attrs:{href:"https://www.iterm2.com/",target:"_blank",rel:"noopener noreferrer"}},[e._v("iTerm"),a("OutboundLink")],1),e._v(" those same permissions. This is because I was using iTerm to run the script. I gave it those permissions and it worked without errors. However, Quiver's vim mode started acting weird. Turns out I needed to (programmatically) press "),a("code",[e._v("Return")]),e._v(" between the two map calls. I modified my "),a("a",{attrs:{href:"https://github.com/JibranKalia/dotfiles/commit/ee67aa07b912005658cc3ee06a136efe5715dcdb",target:"_blank",rel:"noopener noreferrer"}},[e._v("script"),a("OutboundLink")],1),e._v(" to add "),a("code",[e._v("keystroke return")]),e._v(" between the two map calls and it worked.")]),e._v(" "),a("p",[e._v("Here is the full applescript:")]),e._v(" "),a("div",{staticClass:"language- extra-class"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[e._v('tell application "Quiver"\n    activate\nend tell\n\ntell application "System Events"\n    -- jump to the correct location (split mode pane)\n    keystroke tab\n    keystroke tab\n\n    -- if we were already in the cell, jump back\n    key down {shift}\n    keystroke tab\n    keystroke tab\n    key up {shift}\n    delay 0.01\n\n\n    -- remap vim\n    keystroke ":map j gj"\n    keystroke return\n    keystroke ":map k gk"\n    keystroke return\nend tell\n')])])]),a("h3",{attrs:{id:"handy-alias"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#handy-alias"}},[e._v("#")]),e._v(" Handy Alias")]),e._v(" "),a("p",[e._v("The last step was to add an alias so I don't have to remember the full file path to the script. I added this to my "),a("code",[e._v(".zshrc")]),e._v(":")]),e._v(" "),a("div",{staticClass:"language-shell extra-class"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[e._v("# Quiver")]),e._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[e._v("alias")]),e._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[e._v("quiver")]),a("span",{pre:!0,attrs:{class:"token operator"}},[e._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[e._v("'/Users/jibrankalia/dotfiles/quiver/Quiver.sh'")]),e._v("\n")])])]),a("p",[e._v("I then ran "),a("code",[e._v("source ~/.zshrc")]),e._v(" so that my current shell picked up the changes. I then typed "),a("code",[e._v("quiver")]),e._v(" to the shell and voila everything worked.")]),e._v(" "),a("p",[e._v("Thank you for reading.")]),e._v(" "),a("p",[e._v("Credit to "),a("a",{attrs:{href:"https://github.com/YangVincent",target:"_blank",rel:"noopener noreferrer"}},[e._v("Vincent Yang"),a("OutboundLink")],1),e._v(" for the original script.")])])}),[],!1,null,null,null);t.default=s.exports}}]);